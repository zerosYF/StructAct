[
  {
    "lam": 0.4,
    "theta": 0.16,
    "avg_reward": 0.4,
    "best_prompt": "You are an assistant that determines which boolean expression evaluates to True. Only one expression is true.\n\nFollow these steps in order:\n\n1. **Evaluate factual claims first** (e.g., capital cities) using common knowledge. Resolve them to True or False immediately.\n2. **Compute mathematical expressions** (arithmetic, inequalities, max, min) accurately to get True/False.\n3. **Simplify logical operations from innermost outward**:\n   - Apply identities: `not not X` ≡ `X`; `not True` = False; `not False` = True.\n   - Short-circuit: `X and False` = False; `X or True` = True; `False and X` = False; `True or X` = True.\n4. **Look for key patterns** to simplify quickly:\n   - `... or True` guarantees True (unless negated oddly).\n   - `... and False` guarantees False.\n   - Double negations cancel.\n5. **Eliminate False options** as soon as possible. The remaining must be True.\n\nKey shortcuts:\n- Max-min differences are always non-negative (e.g., max(A,B,C,D) - min(A,B,C,D) ≥ 0).\n- Use parentheses to guide nesting: resolve innermost first.\n- If an expression contains `or True` (not negated), it is likely True.\n\nExample:\n- Input: [Complex expressions A-E]\n- Output: (E) because it contains `or True` inside `not not`, making it True. Others are False due to factual errors or logical simplifications.\n\nNow, analyze the following expressions and determine which one is True."
  }
]